Quartz 设计的核心类包括 Scheduler, Job 以及 Trigger。其中，Job 负责定义需要执行的任务，Trigger 负责设置调度策略，Scheduler 将二者组装在一起，并触发任务开始执行
1.cron表达式
  1.包括以下字段：
    秒、分、小时、月内日期、月、周内日期、年（可选字段）、特殊字符
    秒：0-59 , - * / 
    分：0-59 , - * / 
    小时：0-23 , - * / 
    月内日期：1-31 , - * ? / L W C 
    月份：1-12 或者 JAN-DEC , - * / 
    周内日期：1-7 或者 SUN-SAT , - * ? / L C # 
    年（可选）：留空, 1970-2099 , - * /
  2.特殊字符
    1.“”字符被用来指定所有的值。如：""在分钟的字段域里表示“每分钟”；符号“”在“/”前面（如：/10）等价于0在“/”前面（如：0/10）
    2.“/”字符用于指定增量。如：“0/15”在秒域意思是每分钟的0，15，30和45秒。“5/15”在分钟域表示每小时的5，20，35和50
    3.“?”字符和字母L字符只有在月内日期和周内日期字段中可用。
      1.问号表示这个字段不包含具体值。如果指定月内日期，可以在周内日期字段中插入“?”，表示周内日期值无关紧要。
      2.字母L字符是last的缩写。放在月内日期字段中，表示安排在当月最后一天执行。
        在周内日期字段中，如果“L”单独存在，就等于“7”，否则代表当月内周内日期的最后一个实例。所以“0L”表示安排在当月的最后一个星期日执行。
        在月内日期字段中的字母"W"字符把执行安排在最靠近指定值的工作日。把“1W”放在月内日期字段中，表示把执行安排在当月的第一个工作日内。
    4.“#”只允许在周内日期中出现。这个字符用于指定本月的某某天。例如：“6#3”表示第三周的星期五（6表示星期五，3表示第三周）。“2#1”表示第一周的星期一。“4#5”表示第五周的星期三
    5.“*”字符是通配字符，表示该字段可以接受任何可能的值。
    6.“-”字符被用来指定一个范围。如：“10-12”在小时域意味着“10点、11点、12点”
    7.“,”字符被用来指定另外的值。如：“MON,WED,FRI”在星期域里表示”星期一、星期三、星期五”
    8.“L”是‘last’的省略写法可以表示day-of-month和day-of-week域，但在两个字段中的意思不同，
    　例如day-of- month域中表示一个月的最后一天。如果在day-of-week域表示‘7’或者‘SAT’，如果在day-of-week域中前面加上数字，它表示一个月的最后几天，例如‘6L’就表示一个月的最后一个星期五
    9.“W”只允许在月内日期中出现。这个字符用于指定日期的最近工作日。
      例如：如果你在月内日期中写 “15W”，表示：这个月15号最近的工作日。所以，如果15号是周六，则任务会在14号触发。如果15好是周日，则任务会在周一也就是16号触发。
            如果是在月内日期中填写“1W”即使1号是周六，那么任务也只会在下周一，也就是3号触发，“W”字符指定的最近工作日是不能够跨月份的。字符“W”只能配合一个单独的数值使用，不能够是一个数字段，如：1-15W是错误的
      “L”和“W”可以在月内日期中联合使用，LW表示这个月最后一周的工作日
    10.“C”允许在日期域和星期域出现。这个字符依靠一个指定的“日历”。也就是说这个表达式的值依赖于相关的“日历”的计算结果，如果没有“日历” 关联，则等价于所有包含的“日历”。
      如：日期域是“5C”表示关联“日历”中第一天，或者这个月开始的第一天的后5天。星期域是“1C”表示关联“日历” 中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）
  3.示例
    "0 0 12 * * ?"：每天中午12点触发 
    "0 15 10 ? * *"：每天上午10:15触发 
    "0 15 10 * * ?"：每天上午10:15触发 
    "0 15 10 * * ? *"：每天上午10:15触发 
    "0 15 10 * * ? 2005"：2005年的每天上午10:15触发 
    "0 * 14 * * ?"：在每天下午2点到下午2:59期间的每1分钟触发 
    "0 0/5 14 * * ?"：在每天下午2点到下午2:55期间的每5分钟触发 
    "0 0/5 14,18 * * ?"：在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 
    "0 0-5 14 * * ?"：在每天下午2点到下午2:05期间的每1分钟触发 
    "0 10,44 14 ? 3 WED"：每年三月的星期三的下午2:10和2:44触发 
    "0 15 10 ? * MON-FRI"：周一至周五的上午10:15触发 
    "0 15 10 15 * ?"：每月15日上午10:15触发 
    "0 15 10 L * ?"：每月最后一日的上午10:15触发 
    "0 15 10 ? * 6L"：每月的最后一个星期五上午10:15触发 
    "0 15 10 ? * 6L 2002-2005"：2002年至2005年的每月的最后一个星期五上午10:15触发 
    "0 15 10 ? * 6#3"：每月的第三个星期五上午10:15触发 
  4.注意
    一个触发器只能触发一个Job，不过一个Job可以有多个Trigger触发，这会带来并发问题。
    在Quartz中，如果你不想并发执行一个同一个 Job，你可以实现StatefulJob，而不是Job。
    在Spring中如果使用 MethodInvokingJobDetailFactoryBean，可以通过设置concurrent="false"属性来实现
